<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net8.0-windows10.0.26100.0</TargetFramework>
		<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
		<RootNamespace>WucGalleryApp</RootNamespace>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<Platforms>x86;x64;ARM64</Platforms>
		<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
		<PublishProfile>win-$(Platform).pubxml</PublishProfile>
		<UseWinUI>true</UseWinUI>
		<EnableMsixTooling>true</EnableMsixTooling>
		<Nullable>disable</Nullable>
		<TrimMode>partial</TrimMode>
		<ImplicitUsings>true</ImplicitUsings>
		<LangVersion>Latest</LangVersion>
		<IsAotCompatible>True</IsAotCompatible>
		<WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
		<WindowsPackageType Condition="'$(GITHUB_ACTIONS)'=='true'">None</WindowsPackageType>
		<ApplicationIcon>Assets\icon.ico</ApplicationIcon>
		<Version>7.1.0</Version>

		<AllowUnsafeBlocks>True</AllowUnsafeBlocks>
		<NoWarn>NU1903;NU1902;CS8632;WMC1506</NoWarn>
		<!--Remove git hash from assembly informational version in .NET >= 8, Example: false = 1.0.0, true = 1.0.0+xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-->
		<IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>
		<GITHUB_ACTIONS>false</GITHUB_ACTIONS>
	</PropertyGroup>

		<!-- Publish Properties -->
	<PropertyGroup>
		<PublishAot>False</PublishAot>
		<PublishReadyToRun Condition="'$(Configuration)' == 'Debug'">False</PublishReadyToRun>
		<PublishReadyToRun Condition="'$(Configuration)' != 'Debug'">False</PublishReadyToRun>
		<PublishTrimmed Condition="'$(Configuration)' == 'Debug'">False</PublishTrimmed>
		<PublishTrimmed Condition="'$(Configuration)' != 'Debug'">False</PublishTrimmed>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="ColorCode.Core" Version="2.0.15" />
	</ItemGroup>
	<ItemGroup>
		<None Update="T4Templates\NavigationPageMappings.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>NavigationPageMappings.cs</LastGenOutput>
		</None>
		<Compile Update="T4Templates\NavigationPageMappings.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>NavigationPageMappings.tt</DependentUpon>
		</Compile>
		<None Update="T4Templates\SampleNavigationPageMappings.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>SampleNavigationPageMappings.cs</LastGenOutput>
		</None>
		<Compile Update="T4Templates\SampleNavigationPageMappings.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>SampleNavigationPageMappings.tt</DependentUpon>
		</Compile>
		<None Update="T4Templates\BreadcrumbPageMappings.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>BreadcrumbPageMappings.cs</LastGenOutput>
		</None>
		<Compile Update="T4Templates\BreadcrumbPageMappings.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>BreadcrumbPageMappings.tt</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<Content Include="ControlPagesSampleCode\**\*">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</Content>
		<None Include="Assets\**\*">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
	</ItemGroup>
	<ItemGroup>
		<Manifest Include="$(ApplicationManifest)" />
	</ItemGroup>

	<!-- 
		Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
		Tools extension to be activated for this project even if the Windows App SDK Nuget
		package has not yet been restored.
	-->
	<ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<ProjectCapability Include="Msix" />
	</ItemGroup>
 
	<ItemGroup>
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0-preview1" />
		<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.1" />
		<PackageReference Include="Microsoft.Xaml.Behaviors.WinUI.Managed" Version="2.0.9" />
		<PackageReference Include="nucs.JsonSettings" Version="2.0.2" />
		<PackageReference Include="nucs.JsonSettings.Autosave" Version="2.0.2" />
	</ItemGroup>
	<ItemGroup>
		<ProjectReference Include="..\Components\Components.csproj" />
		<ProjectReference Include="..\ContextMenuExtensions\ContextMenuExtensions.csproj" />
		<ProjectReference Include="..\Core\Core.csproj" />
		<ProjectReference Include="..\LandingPages\LandingPages.csproj" />
		<ProjectReference Include="..\Win2D\Win2D.csproj" />
	</ItemGroup>
	
	<ItemGroup>
		<Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
	</ItemGroup>

	<!-- 
		Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution 
		Explorer "Package and Publish" context menu entry to be enabled for this project even if 
		the Windows App SDK Nuget package has not yet been restored.
	-->
	<PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
	<HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
	</PropertyGroup>

<Target Name="TransformAllT4Templates" BeforeTargets="BeforeBuild">
	<ItemGroup>
		<!-- This picks up all T4 templates in the project -->
		<T4Template Include="**\*.tt" />
	</ItemGroup>

	<!-- Check if TextTransform.exe exists before running -->
	<Exec Command="if exist &quot;$(DevEnvDir)TextTransform.exe&quot; &quot;$(DevEnvDir)TextTransform.exe&quot; &quot;%(T4Template.FullPath)&quot;" Condition="Exists('$(DevEnvDir)TextTransform.exe')" />
</Target>
</Project>
