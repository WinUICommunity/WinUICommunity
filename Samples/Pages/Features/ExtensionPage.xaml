<?xml version="1.0" encoding="utf-8" ?>
<Page x:Class="WindowUI.DemoApp.Pages.ExtensionPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:WindowUI.DemoApp.Pages"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:wui="using:WindowUI"
      mc:Ignorable="d">
    <ScrollViewer>
        <Grid Margin="10" ChildrenTransitions="{StaticResource SettingsCardsAnimations}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ComboBox Header="EnumValuesExtension"
                      ItemsSource="{wui:EnumValues Type=local:Animal}"
                      SelectedIndex="0" />
            <MenuFlyoutSeparator Grid.Row="1"
                                 Margin="0,10" />
            <StackPanel Grid.Row="2"
                        Spacing="10">
                <TextBox Name="PhoneNumberValidator"
                         wui:TextBoxExtensions.Regex="^\s*\+?\s*([0-9][\s-]*){9,}$"
                         Header="Text box with Regex extension for phone number, validation occurs on TextChanged" />
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}">
                    <Run Text="Is valid: " />
                    <Run FontWeight="SemiBold"
                         Text="{Binding (wui:TextBoxExtensions.IsValid), ElementName=PhoneNumberValidator}" />
                </TextBlock>
                <TextBox Name="CharactValidator"
                         wui:TextBoxExtensions.ValidationMode="Dynamic"
                         wui:TextBoxExtensions.ValidationType="Characters"
                         Header="Text box with ValidationType=Characters, validation occurs at input with ValidationMode=Dynamic and clear only single character when value is invalid"
                         Text="abcdef" />
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}">
                    <Run Text="Is valid: " />
                    <Run FontWeight="SemiBold"
                         Text="{Binding (wui:TextBoxExtensions.IsValid), ElementName=CharactValidator}" />
                </TextBlock>
                <TextBox Name="EmailValidator"
                         wui:TextBoxExtensions.ValidationType="Email"
                         Header="Text box with ValidationType=Email, validation occurs on TextChanged" />
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}">
                    <Run Text="Is valid: " />
                    <Run FontWeight="SemiBold"
                         Text="{Binding (wui:TextBoxExtensions.IsValid), ElementName=EmailValidator}" />
                </TextBlock>
                <TextBox Name="DecimalValidatorForce"
                         wui:TextBoxExtensions.ValidationMode="Forced"
                         wui:TextBoxExtensions.ValidationType="Decimal"
                         Header="Text box with ValidationType=Decimal, validation occurs on TextChanged and force occurs on lose focus with ValidationMode=Force (333,111 or 333.111)" />
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}">
                    <Run Text="Is valid: " />
                    <Run FontWeight="SemiBold"
                         Text="{Binding (wui:TextBoxExtensions.IsValid), ElementName=DecimalValidatorForce}" />
                </TextBlock>
                <TextBox Name="NumberValidatorDynamic"
                         wui:TextBoxExtensions.ValidationMode="Dynamic"
                         wui:TextBoxExtensions.ValidationType="Number"
                         Header="Text box with ValidationType=Number, validation occurs at input with ValidationMode=Dynamic and clear only single character when value is invalid" />
                <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}">
                    <Run Text="Is valid: " />
                    <Run FontWeight="SemiBold"
                         Text="{Binding (wui:TextBoxExtensions.IsValid), ElementName=NumberValidatorDynamic}" />
                </TextBlock>
            </StackPanel>
            <MenuFlyoutSeparator Grid.Row="3"
                                 Margin="0,10" />
            <StackPanel Grid.Row="4"
                        Spacing="24">
                <TextBox wui:TextBoxExtensions.Mask="9a9a-a9a*"
                         Header="Text box with Mask 9a9a-a9a* (9 allows from 0 to 9, a allow from a to Z and * allows both a and 9)"
                         Text="TextBoxMask" />

                <TextBox wui:TextBoxExtensions.Mask="+1999-9999"
                         wui:TextBoxExtensions.MaskPlaceholder=" "
                         Header="Text box with Mask +1999-9999 and placeHolder as space (placeholder represents the characters the user can change on runtime)" />

                <TextBox wui:TextBoxExtensions.Mask="+\964 799 999 9999"
                         Header="Text box with Mask +964 799 999 9999 (Notice how we escape the first 9 with a backslash)" />

                <TextBox wui:TextBoxExtensions.Mask="99\\99\\9999"
                         Header="Text box with Mask 99\99\9999 (You can escape a backslash with another backslash)" />

                <TextBox wui:TextBoxExtensions.CustomMask="5:[1-5],c:[a-c]"
                         wui:TextBoxExtensions.Mask="a5c-5c*9"
                         Header="Text box with CustomMask in case you want to define your own variable character like a, 9 and *. Mask: a5c-5c*9, 5: [1-5], c: [a-c]" />

            </StackPanel>
        </Grid>
    </ScrollViewer>
</Page>
